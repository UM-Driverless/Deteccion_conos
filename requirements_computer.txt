# This file may be used to create an environment using:
# $ conda create --name <env> --file <this file>
# platform: linux-64

# Note
# If this is used inside a conda environment, you may need to install some libraries with conda, and only use the anaconda pip version.
# To install all these libraries:
# pip3 install -r requirements.txt

# MAIN LIBRARIES
opencv-python
scikit-image

# YOLO REQUIREMENTS
##  Base
matplotlib>=3.2.2
numpy>=1.18.5
opencv-python
Pillow>=7.1.2
PyYAML>=5.3.1
requests>=2.23.0
scipy>=1.4.1  # Google Colab version
torch>=2.0.0+nv23.05
torchvision>=0.15.1 # https://pytorch.org/, https://developer.nvidia.com/cuda-downloads?target_os=Windows&target_arch=x86_64&target_version=10&target_type=exe_network
tqdm>=4.41.0

##  Logging
tensorboard>=2.4.1
##  wandb

##  Plotting
pandas>=1.1.4 # fsds windows needs pandas < 1.3.0
seaborn>=0.11.0

##  Export
thop  # FLOPs computation
ipywidgets
ipywebrtc


# OUR REQUIREMENTS (Commented if already written)
# opencv-python # To use webcam camera. Commented because installed with conda (conda install -c conda-forge opencv)
# opencv-contrib-python #?
python-can # Can communications
simple-pid
# pillow #?
# matplotlib # Various graphs
# pandas #?
# ZED camera dependencies
cython
pyopengl
tornado # ZED and pytorch dependency
# numpy

# STUFF

#  coremltools>=4.1  # CoreML export
#  onnx>=1.9.0  # ONNX export
#  onnx-simplifier>=0.3.6  # ONNX simplifier
#  scikit-learn==0.19.2  # CoreML quantization
#  tensorflow>=2.4.1  # TFLite export
#  tensorflowjs>=3.9.0  # TF.js export
#  openvino-dev  # OpenVINO export

#  Extras
#  albumentations>=1.0.3
#  Cython  # for pycocotools https://github.com/cocodataset/cocoapi/issues/172
#  pycocotools>=2.0  # COCO mAP
#  roboflow
